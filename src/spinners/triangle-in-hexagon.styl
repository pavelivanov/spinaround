@import "../mixins/triangle-in-hexagon"


$triangle-container-width         = 150px
$triangle-height                  = $triangle-container-width / 2
$triangle-edge-size               = floor($triangle-container-width / math(3, 'sqrt'))
$triangle-container-height        = 2 * $triangle-edge-size
$animation-speed                  = 3.5s
$animation-step-percentage        = 16.6666666%
$animation-function               = linear // cubic-bezier(0.64, 2.11, 0.69, 0.57)

// cos(30deg) between edge and X
$triangle-container-margin-left   = floor(-1 * $triangle-edge-size * math(3, 'sqrt') / 4)
// cos(60deg) between edge and Y
$triangle-container-margin-top    = -1 * $triangle-edge-size / 4


@keyframes sod-triangle-in-hexagon--keyframe--container
  for step in 0 1 2 3 4 5 6
    {step * $animation-step-percentage}
      transform rotate((30 - step * 60) * 1deg)


@keyframes sod-triangle-in-hexagon--keyframe--before
  100%
    transform: rotateX(180deg)

@keyframes sod-triangle-in-hexagon--keyframe--after
  100%
    transform: rotateX(180deg)


.sod-triangle-in-hexagon
  size 0
  absolute top 50% left 50%
  user-select none
  transform rotate(30deg)
  animation sod-triangle-in-hexagon--keyframe--container $animation-speed steps(1) infinite
  &:before
  &:after
    content ''
    display: block
    border-bottom $triangle-height solid $color
    border-left ($triangle-edge-size / 2) solid transparent
    border-right ($triangle-edge-size / 2) solid transparent
    absolute top 0 left 50%
    margin-left: -1 * $triangle-edge-size
    margin-top: -1 * $triangle-height
    transform: rotateX(0deg)
    transform-origin 50% 100%
    animation sod-triangle-in-hexagon--keyframe--before ($animation-speed / 6) $animation-function infinite
  &:after
    animation-name sod-triangle-in-hexagon--keyframe--after
